.
.EQ
delim $$
.EN
.
.NH 1 2
History
.
.NH 2
Introduction
.
.PP
The goal of this section is to inform the reader of the
development history and cultural/scientifical impact of the Fortran programming language.
This section also highlights important figures responsible
for the creation of Fortran and its main goal as a programming language.
Finally,
this section is responsible for showcasing how this programming language
is utilized today and how its achievements from its
prime help build up and elevate other programming languages
who utilize its key features and revolutionary attributes.
.
.NH 2
Creation
.
.PP
The Fortran programming language is created in 1957 by American computer scientist
and mathematician John Warner Backus at the young age of 33
with the help of 10 International Business Machine (IBM) employees.
Before Fortran (also known as Formula Translation and Formula Translator),
programs are written in either the first-generation machine language
or the second-generation assembly language;
these languages require programmers to
write code instructions in binary and hexadecimal respectively,
which still remains an arduous and
time-consuming process for any programmer at any skill level.
The goal of Backus and his team of IBM employees
is to create a programming language whose goal is to allow
for more accessible and easier communication with computers
from the perspective of the programmer.
With this goal in mind and after three years of shedding blood,
sweat,
and tears,
Fortran is created with a combination
of the English language
and shorthand algebraic equations;
Fortran is considered by many experts in the computer science field
to be the first third-generation
(also known as high-level)
programming language.
This newfound ease of financial and practical accessibility
with little to no computational drawback from the new programming language
allows engineers and scientists to enter the programming space,
which consequently expands computer usage within
these application domains with scientific computing
and numeric computations present within high-performance computing systems. (Britannica)
.
.NH 2
Lifetime
.
.PP
Ever since its creation in 1957,
Fortran is keeping up to date with the latest innovations
found within the programming language scene,
its last major version update being Fortran 2023
released near the end of the year in the namesake.
These updates allow Fortran to gain new functionalities
to stay relevant and further improve its capabilities;
some major update changes to the language
include added support for character data types (Fortran 77),
structured,
array,
modular,
and generic programming (all in Fortran 90),
parallel computing (Fortran 95),
object-oriented programming (Fortran 2003),
and concurrent programming (Fortran 2008).
Due to being the first high-level programming language of the time,
the peak of popularity and usage of Fortran is during the late 1950s
through the 1960s,
and while updates allow the language to remain relevant with programming language trends,
its intuitiveness falls off as new programming languages
emerge from the first high-level programming language,
excelling on the path the now-less popular Fortran blazed;
Fortran walks so the C++s,
Javas,
and COBOLs of the world can run.
Today Fortran ranks just outside the top 10 most used languages
according to the TIBOE Index of February 2025,
which is still higher than most programming languages,
but a usage rate of 1.75% leaves more to be desired,
although experts in the field still consider Fortran
to be the standard in regards to scientific programming (TIBOE).
Perhaps with the increase of large artificial intelligence learning algorithms
and supercomputer usage,
usage of Fortran may increase in the following years,
but these minuscule increases will only be in these specialized fields
and nowhere near its height during its heyday.
.
.NH 2
Current Status in Industry
.
.PP
As stated before,
Fortran is considered the standard programming language
for scientific computing and high-performance computing in the present day,
so naturally a few specific industries and companies still utilize
this 68-year-old programming language;
according to HG Insights,
notable companies and organizations using Fortran include Boeing,
Blue Origin,
Northrop Grumman,
and Hitachi in manufacturing processes
and Sandia National Laboratories for government usage regarding national security.
Fortran also holds many other uses involving computationally intensive tasks,
such as numerical simulations,
weather modeling,
fluid dynamics,
and large-scale data analysis for physics,
climate research,
and engineering fields.
While mastery of Fortran is impressive and inspiring,
many companies show little interest in it
due to its other high-level programming languages being more common in their systems,
but a few industries and organizations require at least moderate experience
with Fortran to even be considered for a job;
the industries in question are no secret,
being defense and aerospace focused.
Another way to get a job from Fortran knowledge is through research institutions,
as this field of dealing with massive sets of numbers and data is what Fortran specializes in.
.
.

